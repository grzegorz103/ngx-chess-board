import { BehaviorSubject } from 'rxjs';
export class DrawProvider {
    constructor() {
        this.arrowsSubject$ = new BehaviorSubject([]);
        this.circlesSubject$ = new BehaviorSubject([]);
        this.arrows$ = this.arrowsSubject$.asObservable();
        this.circles$ = this.circlesSubject$.asObservable();
    }
    get circles() {
        return this.circlesSubject$.value;
    }
    set circles(circles) {
        this.circlesSubject$.next(circles);
    }
    get arrows() {
        return this.arrowsSubject$.value;
    }
    set arrows(arrows) {
        this.arrowsSubject$.next(arrows);
    }
    addCircle(circle) {
        this.circles = [...this.circles, circle];
    }
    reomveCircle(removeCircle) {
        this.circles = this.circles.filter((circle) => !circle.isEqual(removeCircle));
    }
    addArrow(arrow) {
        this.arrows = [...this.arrows, arrow];
    }
    removeArrow(removeArrow) {
        this.arrows = this.arrows.filter((arrow) => !arrow.isEqual(removeArrow));
    }
    containsCircle(checkCircle) {
        return this.circles.some((circle) => circle.isEqual(checkCircle));
    }
    containsArrow(checkArrow) {
        return this.arrows.some((arrow) => arrow.isEqual(checkArrow));
    }
    clear() {
        this.arrows = [];
        this.circles = [];
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhdy1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1jaGVzcy1ib2FyZC9zcmMvbGliL2VuZ2luZS9kcmF3aW5nLXRvb2xzL2RyYXctcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUl2QyxNQUFNLE9BQU8sWUFBWTtJQUF6QjtRQUNZLG1CQUFjLEdBQUcsSUFBSSxlQUFlLENBQVUsRUFBRSxDQUFDLENBQUM7UUFDbEQsb0JBQWUsR0FBRyxJQUFJLGVBQWUsQ0FBVyxFQUFFLENBQUMsQ0FBQztRQUVyRCxZQUFPLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUM3QyxhQUFRLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQThDMUQsQ0FBQztJQTVDRyxJQUFZLE9BQU87UUFDZixPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDO0lBQ3RDLENBQUM7SUFFRCxJQUFZLE9BQU8sQ0FBQyxPQUFpQjtRQUNqQyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBRUQsSUFBWSxNQUFNO1FBQ2QsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQztJQUNyQyxDQUFDO0lBRUQsSUFBWSxNQUFNLENBQUMsTUFBZTtRQUM5QixJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBRUQsU0FBUyxDQUFDLE1BQWM7UUFDcEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRUQsWUFBWSxDQUFDLFlBQW9CO1FBQzdCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO0lBQ2xGLENBQUM7SUFFRCxRQUFRLENBQUMsS0FBWTtRQUNqQixJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFFRCxXQUFXLENBQUMsV0FBa0I7UUFDMUIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7SUFDN0UsQ0FBQztJQUVELGNBQWMsQ0FBQyxXQUFtQjtRQUM5QixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7SUFDdEUsQ0FBQztJQUVELGFBQWEsQ0FBQyxVQUFpQjtRQUMzQixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBWSxFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDekUsQ0FBQztJQUVELEtBQUs7UUFDRCxJQUFJLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztRQUNqQixJQUFJLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQztJQUN0QixDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgQXJyb3cgfSBmcm9tICcuL3NoYXBlcy9hcnJvdyc7XHJcbmltcG9ydCB7IENpcmNsZSB9IGZyb20gJy4vc2hhcGVzL2NpcmNsZSc7XHJcblxyXG5leHBvcnQgY2xhc3MgRHJhd1Byb3ZpZGVyIHtcclxuICAgIHByaXZhdGUgYXJyb3dzU3ViamVjdCQgPSBuZXcgQmVoYXZpb3JTdWJqZWN0PEFycm93W10+KFtdKTtcclxuICAgIHByaXZhdGUgY2lyY2xlc1N1YmplY3QkID0gbmV3IEJlaGF2aW9yU3ViamVjdDxDaXJjbGVbXT4oW10pO1xyXG5cclxuICAgIHB1YmxpYyBhcnJvd3MkID0gdGhpcy5hcnJvd3NTdWJqZWN0JC5hc09ic2VydmFibGUoKTtcclxuICAgIHB1YmxpYyBjaXJjbGVzJCA9IHRoaXMuY2lyY2xlc1N1YmplY3QkLmFzT2JzZXJ2YWJsZSgpO1xyXG5cclxuICAgIHByaXZhdGUgZ2V0IGNpcmNsZXMoKTogQ2lyY2xlW10ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmNpcmNsZXNTdWJqZWN0JC52YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHNldCBjaXJjbGVzKGNpcmNsZXM6IENpcmNsZVtdKSB7XHJcbiAgICAgICAgdGhpcy5jaXJjbGVzU3ViamVjdCQubmV4dChjaXJjbGVzKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGdldCBhcnJvd3MoKTogQXJyb3dbXSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuYXJyb3dzU3ViamVjdCQudmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBzZXQgYXJyb3dzKGFycm93czogQXJyb3dbXSkge1xyXG4gICAgICAgIHRoaXMuYXJyb3dzU3ViamVjdCQubmV4dChhcnJvd3MpO1xyXG4gICAgfVxyXG5cclxuICAgIGFkZENpcmNsZShjaXJjbGU6IENpcmNsZSkge1xyXG4gICAgICAgIHRoaXMuY2lyY2xlcyA9IFsuLi50aGlzLmNpcmNsZXMsIGNpcmNsZV07XHJcbiAgICB9XHJcblxyXG4gICAgcmVvbXZlQ2lyY2xlKHJlbW92ZUNpcmNsZTogQ2lyY2xlKSB7XHJcbiAgICAgICAgdGhpcy5jaXJjbGVzID0gdGhpcy5jaXJjbGVzLmZpbHRlcigoY2lyY2xlKSA9PiAhY2lyY2xlLmlzRXF1YWwocmVtb3ZlQ2lyY2xlKSk7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkQXJyb3coYXJyb3c6IEFycm93KSB7XHJcbiAgICAgICAgdGhpcy5hcnJvd3MgPSBbLi4udGhpcy5hcnJvd3MsIGFycm93XTtcclxuICAgIH1cclxuXHJcbiAgICByZW1vdmVBcnJvdyhyZW1vdmVBcnJvdzogQXJyb3cpIHtcclxuICAgICAgICB0aGlzLmFycm93cyA9IHRoaXMuYXJyb3dzLmZpbHRlcigoYXJyb3cpID0+ICFhcnJvdy5pc0VxdWFsKHJlbW92ZUFycm93KSk7XHJcbiAgICB9XHJcblxyXG4gICAgY29udGFpbnNDaXJjbGUoY2hlY2tDaXJjbGU6IENpcmNsZSkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmNpcmNsZXMuc29tZSgoY2lyY2xlKSA9PiBjaXJjbGUuaXNFcXVhbChjaGVja0NpcmNsZSkpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnRhaW5zQXJyb3coY2hlY2tBcnJvdzogQXJyb3cpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5hcnJvd3Muc29tZSgoYXJyb3c6IEFycm93KSA9PiBhcnJvdy5pc0VxdWFsKGNoZWNrQXJyb3cpKTtcclxuICAgIH1cclxuXHJcbiAgICBjbGVhcigpIHtcclxuICAgICAgICB0aGlzLmFycm93cyA9IFtdO1xyXG4gICAgICAgIHRoaXMuY2lyY2xlcyA9IFtdO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==