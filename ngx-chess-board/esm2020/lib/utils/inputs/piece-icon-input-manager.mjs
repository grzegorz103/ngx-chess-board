import { Bishop } from '../../models/pieces/bishop';
import { Color } from '../../models/pieces/color';
import { King } from '../../models/pieces/king';
import { Knight } from '../../models/pieces/knight';
import { Pawn } from '../../models/pieces/pawn';
import { Queen } from '../../models/pieces/queen';
import { Rook } from '../../models/pieces/rook';
export class PieceIconInputManager {
    constructor() {
        this._defaultIcons = false;
    }
    get pieceIconInput() {
        return this._pieceIconInput;
    }
    set pieceIconInput(value) {
        this._pieceIconInput = value;
    }
    get defaultIcons() {
        return this._defaultIcons;
    }
    set defaultIcons(value) {
        this._defaultIcons = value;
    }
    isDefaultIcons() {
        return this.pieceIconInput === undefined || this.pieceIconInput === null;
    }
    getPieceIcon(piece) {
        let isWhite = (piece.color === Color.WHITE);
        switch (piece.constructor) {
            case King:
                return isWhite ? this.pieceIconInput.whiteKingUrl : this.pieceIconInput.blackKingUrl;
            case Queen:
                return isWhite ? this.pieceIconInput.whiteQueenUrl : this.pieceIconInput.blackQueenUrl;
            case Rook:
                return isWhite ? this.pieceIconInput.whiteRookUrl : this.pieceIconInput.blackRookUrl;
            case Bishop:
                return isWhite ? this.pieceIconInput.whiteBishopUrl : this.pieceIconInput.blackBishopUrl;
            case Knight:
                return isWhite ? this.pieceIconInput.whiteKnightUrl : this.pieceIconInput.blackKnightUrl;
            case Pawn:
                return isWhite ? this.pieceIconInput.whitePawnUrl : this.pieceIconInput.blackPawnUrl;
        }
    }
    loadDefaultData() {
        this.pieceIconInput = {
            blackBishopUrl: '',
            blackKingUrl: '',
            blackKnightUrl: '',
            blackQueenUrl: '',
            blackRookUrl: '',
            whiteBishopUrl: '',
            whiteKingUrl: '',
            whiteKnightUrl: '',
            whitePawnUrl: '',
            whiteQueenUrl: '',
            whiteRookUrl: '',
            blackPawnUrl: 'a'
        };
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGllY2UtaWNvbi1pbnB1dC1tYW5hZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWNoZXNzLWJvYXJkL3NyYy9saWIvdXRpbHMvaW5wdXRzL3BpZWNlLWljb24taW5wdXQtbWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDcEQsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNoRCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDcEQsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBRWhELE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFHaEQsTUFBTSxPQUFPLHFCQUFxQjtJQUFsQztRQUVZLGtCQUFhLEdBQVksS0FBSyxDQUFDO0lBMkQzQyxDQUFDO0lBeERHLElBQUksY0FBYztRQUNkLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQztJQUNoQyxDQUFDO0lBRUQsSUFBSSxjQUFjLENBQUMsS0FBcUI7UUFDcEMsSUFBSSxDQUFDLGVBQWUsR0FBRyxLQUFLLENBQUM7SUFDakMsQ0FBQztJQUdELElBQUksWUFBWTtRQUNaLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQztJQUM5QixDQUFDO0lBRUQsSUFBSSxZQUFZLENBQUMsS0FBYztRQUMzQixJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQztJQUMvQixDQUFDO0lBRUQsY0FBYztRQUNWLE9BQU8sSUFBSSxDQUFDLGNBQWMsS0FBSyxTQUFTLElBQUksSUFBSSxDQUFDLGNBQWMsS0FBSyxJQUFJLENBQUM7SUFDN0UsQ0FBQztJQUVELFlBQVksQ0FBQyxLQUFZO1FBQ3JCLElBQUksT0FBTyxHQUFHLENBQUMsS0FBSyxDQUFDLEtBQUssS0FBSyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDNUMsUUFBUSxLQUFLLENBQUMsV0FBVyxFQUFFO1lBQ3ZCLEtBQUssSUFBSTtnQkFDTCxPQUFPLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDO1lBQ3pGLEtBQUssS0FBSztnQkFDTixPQUFPLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsYUFBYSxDQUFDO1lBQzNGLEtBQUssSUFBSTtnQkFDTCxPQUFPLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDO1lBQ3pGLEtBQUssTUFBTTtnQkFDUCxPQUFPLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsY0FBYyxDQUFDO1lBQzdGLEtBQUssTUFBTTtnQkFDUCxPQUFPLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsY0FBYyxDQUFDO1lBQzdGLEtBQUssSUFBSTtnQkFDTCxPQUFPLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDO1NBQzVGO0lBQ0wsQ0FBQztJQUVELGVBQWU7UUFDWCxJQUFJLENBQUMsY0FBYyxHQUFHO1lBQ2xCLGNBQWMsRUFBRSxFQUFFO1lBQ2xCLFlBQVksRUFBRSxFQUFFO1lBQ2hCLGNBQWMsRUFBRSxFQUFFO1lBQ2xCLGFBQWEsRUFBRSxFQUFFO1lBQ2pCLFlBQVksRUFBRSxFQUFFO1lBQ2hCLGNBQWMsRUFBRSxFQUFFO1lBQ2xCLFlBQVksRUFBRSxFQUFFO1lBQ2hCLGNBQWMsRUFBRSxFQUFFO1lBQ2xCLFlBQVksRUFBRSxFQUFFO1lBQ2hCLGFBQWEsRUFBRSxFQUFFO1lBQ2pCLFlBQVksRUFBRSxFQUFFO1lBQ2hCLFlBQVksRUFBRSxHQUFHO1NBQ3BCLENBQUE7SUFDTCxDQUFDO0NBRUoiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCaXNob3AgfSBmcm9tICcuLi8uLi9tb2RlbHMvcGllY2VzL2Jpc2hvcCc7XHJcbmltcG9ydCB7IENvbG9yIH0gZnJvbSAnLi4vLi4vbW9kZWxzL3BpZWNlcy9jb2xvcic7XHJcbmltcG9ydCB7IEtpbmcgfSBmcm9tICcuLi8uLi9tb2RlbHMvcGllY2VzL2tpbmcnO1xyXG5pbXBvcnQgeyBLbmlnaHQgfSBmcm9tICcuLi8uLi9tb2RlbHMvcGllY2VzL2tuaWdodCc7XHJcbmltcG9ydCB7IFBhd24gfSBmcm9tICcuLi8uLi9tb2RlbHMvcGllY2VzL3Bhd24nO1xyXG5pbXBvcnQgeyBQaWVjZSB9IGZyb20gJy4uLy4uL21vZGVscy9waWVjZXMvcGllY2UnO1xyXG5pbXBvcnQgeyBRdWVlbiB9IGZyb20gJy4uLy4uL21vZGVscy9waWVjZXMvcXVlZW4nO1xyXG5pbXBvcnQgeyBSb29rIH0gZnJvbSAnLi4vLi4vbW9kZWxzL3BpZWNlcy9yb29rJztcclxuaW1wb3J0IHsgUGllY2VJY29uSW5wdXQgfSBmcm9tICcuL3BpZWNlLWljb24taW5wdXQnO1xyXG5cclxuZXhwb3J0IGNsYXNzIFBpZWNlSWNvbklucHV0TWFuYWdlciB7XHJcblxyXG4gICAgcHJpdmF0ZSBfZGVmYXVsdEljb25zOiBib29sZWFuID0gZmFsc2U7XHJcbiAgICBwcml2YXRlIF9waWVjZUljb25JbnB1dDogUGllY2VJY29uSW5wdXQ7XHJcblxyXG4gICAgZ2V0IHBpZWNlSWNvbklucHV0KCk6IFBpZWNlSWNvbklucHV0IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcGllY2VJY29uSW5wdXQ7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IHBpZWNlSWNvbklucHV0KHZhbHVlOiBQaWVjZUljb25JbnB1dCkge1xyXG4gICAgICAgIHRoaXMuX3BpZWNlSWNvbklucHV0ID0gdmFsdWU7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIGdldCBkZWZhdWx0SWNvbnMoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2RlZmF1bHRJY29ucztcclxuICAgIH1cclxuXHJcbiAgICBzZXQgZGVmYXVsdEljb25zKHZhbHVlOiBib29sZWFuKSB7XHJcbiAgICAgICAgdGhpcy5fZGVmYXVsdEljb25zID0gdmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgaXNEZWZhdWx0SWNvbnMoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucGllY2VJY29uSW5wdXQgPT09IHVuZGVmaW5lZCB8fCB0aGlzLnBpZWNlSWNvbklucHV0ID09PSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFBpZWNlSWNvbihwaWVjZTogUGllY2UpOiBzdHJpbmcge1xyXG4gICAgICAgIGxldCBpc1doaXRlID0gKHBpZWNlLmNvbG9yID09PSBDb2xvci5XSElURSk7XHJcbiAgICAgICAgc3dpdGNoIChwaWVjZS5jb25zdHJ1Y3Rvcikge1xyXG4gICAgICAgICAgICBjYXNlIEtpbmc6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gaXNXaGl0ZSA/IHRoaXMucGllY2VJY29uSW5wdXQud2hpdGVLaW5nVXJsIDogdGhpcy5waWVjZUljb25JbnB1dC5ibGFja0tpbmdVcmw7XHJcbiAgICAgICAgICAgIGNhc2UgUXVlZW46XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gaXNXaGl0ZSA/IHRoaXMucGllY2VJY29uSW5wdXQud2hpdGVRdWVlblVybCA6IHRoaXMucGllY2VJY29uSW5wdXQuYmxhY2tRdWVlblVybDtcclxuICAgICAgICAgICAgY2FzZSBSb29rOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzV2hpdGUgPyB0aGlzLnBpZWNlSWNvbklucHV0LndoaXRlUm9va1VybCA6IHRoaXMucGllY2VJY29uSW5wdXQuYmxhY2tSb29rVXJsO1xyXG4gICAgICAgICAgICBjYXNlIEJpc2hvcDpcclxuICAgICAgICAgICAgICAgIHJldHVybiBpc1doaXRlID8gdGhpcy5waWVjZUljb25JbnB1dC53aGl0ZUJpc2hvcFVybCA6IHRoaXMucGllY2VJY29uSW5wdXQuYmxhY2tCaXNob3BVcmw7XHJcbiAgICAgICAgICAgIGNhc2UgS25pZ2h0OlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzV2hpdGUgPyB0aGlzLnBpZWNlSWNvbklucHV0LndoaXRlS25pZ2h0VXJsIDogdGhpcy5waWVjZUljb25JbnB1dC5ibGFja0tuaWdodFVybDtcclxuICAgICAgICAgICAgY2FzZSBQYXduOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzV2hpdGUgPyB0aGlzLnBpZWNlSWNvbklucHV0LndoaXRlUGF3blVybCA6IHRoaXMucGllY2VJY29uSW5wdXQuYmxhY2tQYXduVXJsO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBsb2FkRGVmYXVsdERhdGEoKXtcclxuICAgICAgICB0aGlzLnBpZWNlSWNvbklucHV0ID0ge1xyXG4gICAgICAgICAgICBibGFja0Jpc2hvcFVybDogJycsXHJcbiAgICAgICAgICAgIGJsYWNrS2luZ1VybDogJycsXHJcbiAgICAgICAgICAgIGJsYWNrS25pZ2h0VXJsOiAnJyxcclxuICAgICAgICAgICAgYmxhY2tRdWVlblVybDogJycsXHJcbiAgICAgICAgICAgIGJsYWNrUm9va1VybDogJycsXHJcbiAgICAgICAgICAgIHdoaXRlQmlzaG9wVXJsOiAnJyxcclxuICAgICAgICAgICAgd2hpdGVLaW5nVXJsOiAnJyxcclxuICAgICAgICAgICAgd2hpdGVLbmlnaHRVcmw6ICcnLFxyXG4gICAgICAgICAgICB3aGl0ZVBhd25Vcmw6ICcnLFxyXG4gICAgICAgICAgICB3aGl0ZVF1ZWVuVXJsOiAnJyxcclxuICAgICAgICAgICAgd2hpdGVSb29rVXJsOiAnJyxcclxuICAgICAgICAgICAgYmxhY2tQYXduVXJsOiAnYSdcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ==