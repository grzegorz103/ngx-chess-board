import { BehaviorSubject } from 'rxjs';
export class HistoryMoveProvider {
    constructor() {
        this.historyMovesSubject$ = new BehaviorSubject([]);
    }
    get historyMoves() {
        return this.historyMovesSubject$.value;
    }
    set historyMoves(states) {
        this.historyMovesSubject$.next(states);
    }
    addMove(historyMove) {
        this.historyMoves = [...this.historyMoves, historyMove];
    }
    pop() {
        const lastHistoryMove = this.getLastMove();
        this.historyMoves = this.historyMoves.filter((state) => state !== lastHistoryMove);
        return lastHistoryMove;
    }
    getAll() {
        return this.historyMoves;
    }
    clear() {
        this.historyMoves = [];
    }
    getLastMove() {
        return this.historyMoves[this.getLastMoveIndex()];
    }
    getLastMoveIndex() {
        return this.historyMoves.length - 1;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlzdG9yeS1tb3ZlLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWNoZXNzLWJvYXJkL3NyYy9saWIvaGlzdG9yeS1tb3ZlLXByb3ZpZGVyL2hpc3RvcnktbW92ZS1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBR3ZDLE1BQU0sT0FBTyxtQkFBbUI7SUFBaEM7UUFDSSx5QkFBb0IsR0FBRyxJQUFJLGVBQWUsQ0FBZ0IsRUFBRSxDQUFDLENBQUM7SUFxQ2xFLENBQUM7SUFuQ0csSUFBSSxZQUFZO1FBQ1osT0FBTyxJQUFJLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDO0lBQzNDLENBQUM7SUFFRCxJQUFJLFlBQVksQ0FBQyxNQUFxQjtRQUNsQyxJQUFJLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFRCxPQUFPLENBQUMsV0FBd0I7UUFDNUIsSUFBSSxDQUFDLFlBQVksR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLFlBQVksRUFBRSxXQUFXLENBQUMsQ0FBQztJQUM1RCxDQUFDO0lBRUQsR0FBRztRQUNDLE1BQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUMzQyxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUN4QyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsS0FBSyxLQUFLLGVBQWUsQ0FDdkMsQ0FBQztRQUNGLE9BQU8sZUFBZSxDQUFDO0lBQzNCLENBQUM7SUFFRCxNQUFNO1FBQ0YsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQzdCLENBQUM7SUFFRCxLQUFLO1FBQ0QsSUFBSSxDQUFDLFlBQVksR0FBRyxFQUFFLENBQUM7SUFDM0IsQ0FBQztJQUVELFdBQVc7UUFDUCxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBRUQsZ0JBQWdCO1FBQ1osT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDeEMsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0IH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IEhpc3RvcnlNb3ZlIH0gZnJvbSAnLi9oaXN0b3J5LW1vdmUnO1xyXG5cclxuZXhwb3J0IGNsYXNzIEhpc3RvcnlNb3ZlUHJvdmlkZXIge1xyXG4gICAgaGlzdG9yeU1vdmVzU3ViamVjdCQgPSBuZXcgQmVoYXZpb3JTdWJqZWN0PEhpc3RvcnlNb3ZlW10+KFtdKTtcclxuXHJcbiAgICBnZXQgaGlzdG9yeU1vdmVzKCk6IEhpc3RvcnlNb3ZlW10ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmhpc3RvcnlNb3Zlc1N1YmplY3QkLnZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIHNldCBoaXN0b3J5TW92ZXMoc3RhdGVzOiBIaXN0b3J5TW92ZVtdKSB7XHJcbiAgICAgICAgdGhpcy5oaXN0b3J5TW92ZXNTdWJqZWN0JC5uZXh0KHN0YXRlcyk7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkTW92ZShoaXN0b3J5TW92ZTogSGlzdG9yeU1vdmUpIHtcclxuICAgICAgICB0aGlzLmhpc3RvcnlNb3ZlcyA9IFsuLi50aGlzLmhpc3RvcnlNb3ZlcywgaGlzdG9yeU1vdmVdO1xyXG4gICAgfVxyXG5cclxuICAgIHBvcCgpOiBIaXN0b3J5TW92ZSB7XHJcbiAgICAgICAgY29uc3QgbGFzdEhpc3RvcnlNb3ZlID0gdGhpcy5nZXRMYXN0TW92ZSgpO1xyXG4gICAgICAgIHRoaXMuaGlzdG9yeU1vdmVzID0gdGhpcy5oaXN0b3J5TW92ZXMuZmlsdGVyKFxyXG4gICAgICAgICAgICAoc3RhdGUpID0+IHN0YXRlICE9PSBsYXN0SGlzdG9yeU1vdmVcclxuICAgICAgICApO1xyXG4gICAgICAgIHJldHVybiBsYXN0SGlzdG9yeU1vdmU7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0QWxsKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmhpc3RvcnlNb3ZlcztcclxuICAgIH1cclxuXHJcbiAgICBjbGVhcigpIHtcclxuICAgICAgICB0aGlzLmhpc3RvcnlNb3ZlcyA9IFtdO1xyXG4gICAgfVxyXG5cclxuICAgIGdldExhc3RNb3ZlKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmhpc3RvcnlNb3Zlc1t0aGlzLmdldExhc3RNb3ZlSW5kZXgoKV07XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0TGFzdE1vdmVJbmRleCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5oaXN0b3J5TW92ZXMubGVuZ3RoIC0gMTtcclxuICAgIH1cclxufVxyXG4iXX0=